#!/bin/bash

# mpiflags tries to discover what flags are used by your mpi compiler wrapper by
# using echo as the underlining compiler.

function usage(){
	printf "Retrieves flags com mpi compiler wrappers\n\n"
	printf "Usage: $0 (--link|--compile) <mpiwrapper> <regex>\n\n"
	printf "Options are filtered by the regex as one per line.\n"
	printf "Examples:\n"
	printf "  LDFLAGS+=\$(shell $0 --link mpicc ^-L)\n"
	printf "  LDLIBS+=\$(shell $0 --link mpicc ^-l)\n"
	printf "  CFLAGS+=\$(shell $0 --compile mpicc ^-I)\n"
}

cc=echo
flag=$1
mpicc=$2
regex=${3:-.}

export I_MPI_CC=$cc
export OMPI_CC=$cc
export MPICH_CC=$cc
export I_MPI_CXX=$cc
export OMPI_CXX=$cc
export MPICH_CXX=$cc

prefixes=("I_MPI" "OMPI" "MPICH")
langs=("CC" "CXX")

ctest=this-is-a-random-file-from-1984.c
cflags=
split=0

case $flag in
	--compile)
		cflags="-c"
	;;
	--link)
		# Nothing needed
	;;
	*)
		usage
		exit 1
	;;
esac

result=$($mpicc $cflags $ctest)

if [ $? != 0 ]; then
	exit 1
fi

out=$(printf "%s\n" $result | tr ' ' '\n' | \
	grep -v $ctest | \
	grep -v '^-c' | \
	grep -- $regex)

# Join back into one line
out=$(printf "%s\n" $out | tr '\n' ' ')

printf "%s\n" "$out"

exit 0
